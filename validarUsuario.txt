CREATE TABLE dbo.DBErrors(
  ErrorId INT IDENTITY(1,1) NOT NULL
  , UserName VARCHAR(128) NULL
  , ErrorNumber INT NULL
  , ErrorState INT NULL
  , ErrorSeverity INT NULL
  , ErrorLine INT NULL
  , ErrorProcedure VARCHAR(MAX) NULL
  , ErrorMessage VARCHAR(MAX) NULL
  , ErrorDateTime DATETIME NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] 
GO





USE [bd2]
GO
/****** Object:  StoredProcedure [dbo].[validarUsuario]    Script Date: 22/05/2023 4:20:34 pm ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[validarUsuario]
     @inNombreUsuario VARCHAR(32)
    , @inPin VARCHAR(32)
    , @inIpUsuario VARCHAR(32)
    , @outUsuarioEncontrado INT OUTPUT
AS
BEGIN
     SET NOCOUNT ON;
     BEGIN TRY
  DECLARE @IdUsuario INT=7777777;
    DECLARE @datos_json VARCHAR(2048)='{"TipoAccion":"Login exitoso","Description":"Se ha iniciado sesion correctamente"}'
    DECLARE @FechaHoraActual DATETIME
    SET @FechaHoraActual = GETDATE() --Obtiene la fecha y hora actuales


    IF COALESCE(@inNombreUsuario, '') = '' -- Valida que el valor de @nombre no sea nulo ni cadena vacía
    BEGIN
        SET @outUsuarioEncontrado=5003 --5003 nombre usuario vacío o nulo
        SET @datos_json = JSON_MODIFY(@datos_json, '$.TipoAccion', 'Login fallido')
        SET @datos_json = JSON_MODIFY(@datos_json, '$.Description', 'nombre usuario vacío o nulo')
        INSERT dbo.EventLog (
            LogDescription
            , PostIdUser
            , PostIP
            , PostTime     
        )
        VALUES (
            @datos_json
            , @IdUsuario
            , @inIpUsuario
            , @FechaHoraActual
        );
        RETURN
    END
    ELSE IF COALESCE(@inPin, '') = '' -- Valida que el valor de @inPin no sea nulo ni cadena vacía
    BEGIN
        SET @outUsuarioEncontrado=5004 --5004 contraseña de usuario vacía o nula
        SET @datos_json = JSON_MODIFY(@datos_json, '$.TipoAccion', 'Login fallido')
        SET @datos_json = JSON_MODIFY(@datos_json, '$.Description', 'contraseña de usuario vacía o nula')
        INSERT dbo.EventLog (
            LogDescription
            , PostIdUser
            , PostIP
            , PostTime     
        )
        VALUES (
            @datos_json
            , @IdUsuario
            , @inIpUsuario
            , @FechaHoraActual
        );
        RETURN
    END

    IF NOT EXISTS (SELECT A.NombreUsuario, A.Pin FROM dbo.Usuario A WHERE A.NombreUsuario=@inNombreUsuario AND A.Pin=@inPin)
    BEGIN
        SET @outUsuarioEncontrado = 5005 -- Nombre de usuario o contraseña no existen en la tabla de Usuario
        SET @datos_json = JSON_MODIFY(@datos_json, '$.TipoAccion', 'Login fallido')
        SET @datos_json = JSON_MODIFY(@datos_json, '$.Description', 'Nombre de usuario o contraseña no existen en la tabla de Usuario')
        INSERT dbo.EventLog (
            LogDescription
            , PostIdUser
            , PostIP
            , PostTime     
        )
        VALUES (
            @datos_json
            , @IdUsuario
            , @inIpUsuario
            , @FechaHoraActual
        );
        RETURN
    END

    INSERT dbo.EventLog (
        LogDescription
        , PostIdUser
        , PostIP
    , PostTime     
    )
   VALUES (
    @datos_json
    , @IdUsuario
    , @inIpUsuario
    , @FechaHoraActual
    );

  SET @outUsuarioEncontrado = 1
  IF EXISTS (SELECT A.EsAdmin FROM dbo.Usuario A WHERE A.EsAdmin=0)
  BEGIN
	SET @outUsuarioEncontrado = 0
  END

  END TRY
  BEGIN CATCH
      
    INSERT INTO dbo.DBErrors
    
    VALUES (
      SUSER_SNAME(),
      ERROR_NUMBER(),
      ERROR_STATE(),
      ERROR_SEVERITY(),
      ERROR_LINE(),
      ERROR_PROCEDURE(),
      ERROR_MESSAGE(),
      GETDATE()
    );

    SET @outUsuarioEncontrado=50005;
  END CATCH
SET NOCOUNT OFF;
END